plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = "searchonmcmod-forge-${support_version}"
}

tasks.withType(JavaExec).configureEach {
    jvmArgs = ['-XX:+AllowEnhancedClassRedefinition']
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

minecraft {
    mappings channel: mapping_channel, version: "${parchment_date}-${minecraft_version}"
    reobf = false
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        name = "forge center"
        url = 'https://maven.minecraftforge.net/'
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
}

tasks.named('processResources', ProcessResources).configure {
    def replaceProperties = [
            mod_id                    : mod_id,
            mod_version               : mod_version,
            mod_name                  : mod_name,
            mod_description           : mod_description,
            mod_authors               : mod_authors,
            mod_license               : mod_license,
            minecraft_version         : minecraft_version,
            github_url                : github_url,
            forge_loader_version_range: forge_loader_version_range,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}
