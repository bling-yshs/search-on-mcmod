plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
}

version = project.mod_version
group = project.mod_group_id

base {
    archivesName = "searchonmcmod-fabric-${support_version}"
}

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_date}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
}

tasks.named('processResources', ProcessResources).configure {
    def replaceProperties = [
            mod_id                    : mod_id,
            mod_version               : mod_version,
            mod_name                  : mod_name,
            mod_description           : mod_description,
            mod_authors               : mod_authors,
            mod_license               : mod_license,
            minecraft_version         : minecraft_version,
            github_url                : github_url,
            forge_loader_version_range: forge_loader_version_range,
    ]
    inputs.properties replaceProperties

    filesMatching("fabric.mod.json") {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}
